name: Update opened PRs from Release Branch
description: Update opened PRs from their target a release branch with common, non workspace content. 
on:
  workflow_call:
    inputs:
      release-branch:
        description: Release branch whose PRs should be updated with the given commit.
        type: string
        required: true
      pr:
        description: PR number of a single PR to update. By default update all PRs.
        type: string
        required: false
      force:
        description: Update the PRs even if it overwrites PR manual changes.
        type: boolean
        default: false
        required: false
  
  workflow_dispatch:
    inputs:
      release-branch:
        description: Release branch whose PRs should be updated with the given commit.
        type: string
        required: true
      pr:
        description: PR number of a single PR to update. By default update all PRs.
        type: string
        required: false
      force:
        description: Update the PRs even if it overwrites PR manual changes.
        type: boolean
        default: false
        required: false
  
concurrency:
  group: ${{ github.workflow_ref }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-prs:
    runs-on: ubuntu-latest
    name: Update PRs

    outputs:
      pr-comments: ${{ steps.update-prs.outputs.pr-comments }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        id: update-prs
        env:
          INPUT_RELEASE_BRANCH: ${{ inputs.release-branch }}
          INPUT_PR: ${{ inputs.pr }}
          INPUT_FORCE: ${{ inputs.force }}

        with:
          script: |
            const script = require('./.github/workflows/github-script/update-prs-with-release-branch-commits.js');
            await script({github, context, core});
    permissions:
      contents: write
      pull-requests: write

  comment-prs:
    runs-on: ubuntu-latest
    name: Comment PRs
    needs:
      - update-prs
    if: needs.update-prs.outputs.pr-comments != ''
    steps:
      - uses: actions/github-script@v7
        env:
          INPUT_PR_COMMENTS: ${{ needs.update-prs.outputs.pr-comments }}
        with:
          script: |
            const prComments = JSON.parse(core.getInput('pr_comments'));
            for (const pr of prComments) {
              await github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: pr.comment,
              });
              await new Promise(r => setTimeout(r, 500));
            }

    permissions:
      pull-requests: write
