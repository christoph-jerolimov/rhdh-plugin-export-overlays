name: Publish PR Dynamic Plugin Images
on:
  issue_comment:
    types: [created]

concurrency:
  group: ${{ github.workflow_ref }}-${{ github.ref }}-${{ github.event.issue.id }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    name: Prepare

    if: github.event.issue.pull_request && github.event.comment.body == '/publish'
    outputs:
      overlay-branch: ${{ steps.get-branch.outputs.overlay-branch }}
      overlay-commit: ${{ steps.get-branch.outputs.overlay-commit }}
      workspace: ${{ steps.get-branch.outputs.workspace }}

    permissions:
      statuses: write

    steps:
      - name: Get PR branch data
        id: get-branch
        uses: actions/github-script@v7
        with:
          script: |
            const currentPullRequest = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            const prBranch = currentPullRequest.data.head.ref;
            core.setOutput('overlay-branch', prBranch);
            const prCommit = currentPullRequest.data.head.sha;
            core.setOutput('overlay-commit', prCommit);
            let workspace = '';

            const matches = prBranch.match(/^workspaces\/release-.+__(.+)$/);
            if (matches && matches.length == 2) {
              workspace = `workspaces/${matches[1]}`;
            } else {
              const prFiles = await github.rest.pulls.listFiles({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });
              const workspaces = [ ... new Set(prFiles.data
                .map(f => f.filename.match(/^workspaces\/([^\/]+)\/.*/))
                .filter(match => match)
                .map(match => match[1])
              )];
              if (workspaces.length === 1) {
                workspace =`workspaces/${workspaces[0]}`;
              }
            }
            core.setOutput('workspace', workspace);
            if (workspace === '') {
              return;
            }

            const workflowRun = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: '${{ github.run_id }}',
            });
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: prCommit,
              description: '${{ github.workflow }}',
              state: 'pending',
              target_url: workflowRun.data.html_url,
              context: 'publish'
            });
            
  export:
    needs:
      - prepare

    if: needs.prepare.outputs.overlay-branch != '' && needs.prepare.outputs.workspace != ''

    uses: davidfestal/rhdh-plugin-export-utils/.github/workflows/export-workspaces-as-dynamic.yaml@multi-plugins-repo
    with:
      overlay-branch: ${{ needs.prepare.outputs.overlay-branch }}
      workspace-path: ${{ needs.prepare.outputs.workspace }}
      publish-container: true

    permissions:
      contents: write
      attestations: write
      packages: write
      id-token: write

  add_completion_comment:
    needs:
      - prepare
      - export

    permissions:
      statuses: write
      pull-requests: write

    if: always() && needs.prepare.outputs.overlay-branch != '' && needs.prepare.outputs.workspace != ''
    runs-on: ubuntu-latest
    steps:
      - name: Add completion comment
        uses: actions/github-script@v7
        env:
          INPUT_OVERLAY_COMMIT: ${{ needs.prepare.outputs.overlay-commit }}
          INPUT_PUBLISHED_EXPORTS: ${{ needs.export.outputs.published-exports }}
          INPUT_FAILED_EXPORTS: ${{ needs.export.outputs.failed-exports }}
        with:
          script: |
            const workflowRun = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: '${{ github.run_id }}'
            });
            const jobs = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: '${{ github.run_id }}',
              filter: 'latest',
            });
            const success = jobs.data.jobs
              .filter(j => j.name.startsWith('export'))
              .every(j => j.conclusion === 'success');

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: core.getInput('overlay_commit'),
              description: '${{ github.workflow }}',
              state: success ? 'success' : 'failure',
              target_url: workflowRun.data.html_url,
              context: 'publish',
            });

            let body = `Publish workflow has completed with ${ success ? 'success' : 'failure' }.`;
            const publishedExports = core.getMultilineInput('published_exports');
            if (publishedExports.length > 0) {
              body = `${body}\n- Published container images:`;
              publishedExports.forEach(line => {
                body = `${body}\n  - ${line}`;
              });
            }
            const failedExports = core.getMultilineInput('failed_exports');
            if (failedExports.length > 0) {
              body = `${body}\n- Plugins failed during export or container image publishing:`;
              failedExports.forEach(line => {
                body = `${body}\n  - ${line}`;
              });
            }
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
    
  add_no_workspace_comment:
    needs:
      - prepare

    if: always() && needs.prepare.outputs.overlay-branch != '' && needs.prepare.outputs.workspace == ''
    runs-on: ubuntu-latest
    steps:
      - name: Add success comment
        uses: actions/github-script@v7
        env:
          INPUT_OVERLAY_COMMIT: ${{ needs.prepare.outputs.overlay-commit }}

        with:
          script: |
            const workflowRun = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: '${{ github.run_id }}'
            });

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: core.getInput('overlay_commit'),
              description: '${{ github.workflow }}',
              state: 'failure',
              target_url: workflowRun.data.html_url,
              context: 'publish',
            });

            const body = `Publish action cancelled: PR doesn't touch only 1 workspace`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })       

    permissions:
      statuses: write
      pull-requests: write

        